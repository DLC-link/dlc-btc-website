diff --git a/config.regtest.json b/config.regtest.json
index 30ed61a..72dd17a 100644
--- a/config.regtest.json
+++ b/config.regtest.json
@@ -13,7 +13,7 @@
   "merchants": [
     {
       "name": "AMBER",
-      "address": "",
+      "address": "0xBf7184178d610D7B0239a5CB8D64c1Df22d306a9",
       "logo": ""
     }
   ]
diff --git a/package.json b/package.json
index fae4edf..60947f0 100644
--- a/package.json
+++ b/package.json
@@ -50,6 +50,7 @@
     "react-apexcharts": "^1.4.1",
     "react-charts": "^3.0.0-beta.57",
     "react-dom": "^18.2.0",
+    "react-icons": "^5.2.1",
     "react-query": "^3.39.3",
     "react-redux": "^8.1.3",
     "react-youtube": "^10.1.0",
diff --git a/public/images/logos/amber-logo.svg b/public/images/logos/amber-logo.svg
new file mode 100644
index 0000000..d082e6c
--- /dev/null
+++ b/public/images/logos/amber-logo.svg
@@ -0,0 +1,3 @@
+<svg width="147" height="26" viewBox="0 0 147 26" fill="none" xmlns="http://www.w3.org/2000/svg">
+<path id="Logo_Amber" d="M114.9 10.9957V15.2735H101.584V20.8991H115.367V25.5H96.9559C96.9852 20.6942 96.9852 15.8884 96.9852 10.994H114.895L114.9 10.9957ZM15.8126 0.564264C15.9225 0.54877 16.0343 0.572596 16.1286 0.631606C16.2228 0.690615 16.2937 0.781087 16.3288 0.887317C19.9043 8.97576 23.5107 17.0625 27.0862 25.1214C27.1154 25.21 27.1447 25.2951 27.2032 25.4444H25.3793C24.4485 25.4444 23.5469 25.4149 22.6177 25.4444C22.4722 25.4663 22.3238 25.4337 22.2005 25.3528C22.0772 25.2718 21.9875 25.1481 21.9484 25.005C19.8251 20.1106 17.7036 15.1884 15.582 10.294C14.942 8.82812 14.3019 7.34139 13.6343 5.77824C13.5687 5.94024 13.491 6.097 13.402 6.24719C10.6674 12.4905 7.95448 18.7316 5.26341 24.9703C5.22233 25.1122 5.13222 25.2346 5.00942 25.3152C4.88663 25.3958 4.73927 25.4293 4.59409 25.4097C3.36211 25.3854 2.14734 25.401 0.922251 25.3767L0 25.3506L0.261537 24.9112L10.8985 1.00195C10.9396 0.860019 11.0297 0.737648 11.1525 0.657031C11.2753 0.576414 11.4226 0.542887 11.5678 0.562528C12.9925 0.592054 14.4172 0.59379 15.8126 0.564264ZM37.3859 0.65458C37.5038 0.643098 37.6224 0.667789 37.7261 0.725426C37.8299 0.783063 37.914 0.870963 37.9675 0.977632C40.3523 4.28978 42.7353 7.57761 45.1201 10.8776C45.2157 11.0227 45.3227 11.1598 45.4402 11.2875C45.5572 11.1416 45.6432 11.0235 45.731 10.9071C48.1158 7.59497 50.4988 4.30714 52.8836 1.00716C52.9585 0.891345 53.0629 0.797995 53.1858 0.736881C53.3087 0.675768 53.4456 0.649141 53.5822 0.65979C55.0361 0.689317 56.5193 0.65979 57.9733 0.65979H58.4378V25.4427H53.8438V7.62623C53.8145 7.59671 53.7852 7.59671 53.756 7.56718L53.4945 7.91455L46.0803 17.8492C46.0061 17.9838 45.8971 18.0954 45.7649 18.1721C45.6327 18.2488 45.4823 18.2878 45.3299 18.2847C45.1774 18.2817 45.0286 18.2368 44.8995 18.1549C44.7704 18.073 44.6659 17.9571 44.5971 17.8197C42.2123 14.5076 39.7999 11.2197 37.4151 7.91976C37.3274 7.78605 37.2303 7.65894 37.1244 7.53939C37.0951 7.56892 37.0659 7.56892 37.0366 7.59845V25.4427H32.415V0.680631C32.532 0.680631 32.6765 0.651104 32.7935 0.651104H37.3876L37.3859 0.65458ZM136.124 0.508686C137.532 0.498735 138.923 0.80922 140.195 1.41705C141.63 2.08613 142.83 3.17718 143.64 4.54712C144.449 5.91705 144.83 7.50191 144.731 9.09386C144.701 10.1347 144.505 11.164 144.151 12.142C143.724 13.2284 143.04 14.1924 142.158 14.9495C141.276 15.7065 140.223 16.2335 139.092 16.4841C138.92 16.5136 138.772 16.5727 138.54 16.63C138.772 16.894 138.946 17.1285 139.151 17.3247C141.36 19.8153 143.542 22.306 145.75 24.8261C145.867 24.972 145.954 25.1735 146.094 25.4114H140.801C140.582 25.3983 140.376 25.3043 140.221 25.1474C138.012 22.5977 135.801 20.0776 133.621 17.5053C133.513 17.3708 133.375 17.2637 133.218 17.1925C133.062 17.1213 132.891 17.0881 132.719 17.0955C131.441 17.125 130.138 17.0955 128.822 17.0955V25.3888C127.224 25.3593 125.711 25.3593 124.142 25.3593V12.8124H124.658C128.294 12.8124 131.928 12.8419 135.591 12.8419C136.238 12.8524 136.884 12.7736 137.509 12.6075C138.38 12.3227 139.118 11.7295 139.588 10.9377C140.059 10.1459 140.229 9.20896 140.068 8.30013C139.98 7.43612 139.599 6.62932 138.99 6.01559C138.381 5.40186 137.581 5.01871 136.725 4.93067C136.339 4.88181 135.95 4.86207 135.562 4.87161H124.164V0.529527C124.252 0.529527 124.369 0.5 124.455 0.5L136.124 0.508686ZM79.3125 0.508686C80.7918 0.491585 82.2579 0.791112 83.6141 1.38753C84.7044 1.85066 85.6415 2.61741 86.3161 3.5982C86.9907 4.57899 87.3748 5.73332 87.4236 6.92629C87.6085 8.06934 87.4046 9.24191 86.845 10.253C86.2854 11.2641 85.4032 12.0542 84.342 12.4946C84.4005 12.5536 84.459 12.5832 84.4865 12.6109C85.6325 13.0944 86.6039 13.9212 87.2695 14.9798C87.935 16.0383 88.2627 17.2775 88.2082 18.5301C88.2284 19.8415 87.841 21.1264 87.1002 22.204C86.3595 23.2817 85.3028 24.0978 84.0787 24.5378C83.2893 24.8378 82.471 25.0537 81.6371 25.1822C80.7331 25.3232 79.8195 25.3917 78.9048 25.3871H67.3043V10.6449H67.8204C71.7452 10.5858 75.67 10.5563 79.5672 10.4712C80.1341 10.4432 80.6931 10.326 81.2242 10.1238C81.5606 10.0166 81.8689 9.83463 82.1264 9.59131C82.384 9.34799 82.5843 9.0495 82.7125 8.71777C82.8408 8.38605 82.8938 8.02952 82.8676 7.67441C82.8414 7.31931 82.7366 6.97464 82.5611 6.66576C82.3071 6.1686 81.9352 5.74256 81.4786 5.42559C81.022 5.10862 80.4948 4.91055 79.944 4.84904C79.559 4.79041 79.1702 4.7608 78.7809 4.76046C75.1176 4.73093 71.4837 4.73093 67.8204 4.7014H67.3043V0.533002C67.4213 0.533002 67.5073 0.503475 67.6243 0.503475H79.3125V0.508686ZM78.9925 14.6326H72.282C72.1375 14.6326 72.0205 14.6621 71.8743 14.6621V20.9912C74.5206 20.9912 77.0792 21.0207 79.667 20.9912C80.5303 20.9825 81.3784 20.7613 82.1378 20.3468C82.4639 20.1963 82.7545 19.9774 82.9901 19.7045C83.2257 19.4316 83.4009 19.1112 83.504 18.7646C83.6555 18.2124 83.6302 17.626 83.4318 17.0892C83.2334 16.5524 82.8721 16.0926 82.3994 15.7755C81.4235 15.0221 80.2261 14.6198 78.9977 14.6326H78.9925ZM115.394 0.65458V5.13561H96.9834V0.65458H115.394Z" fill="white"/>
+</svg>
diff --git a/src/app/app.tsx b/src/app/app.tsx
index a1dde42..4d66805 100644
--- a/src/app/app.tsx
+++ b/src/app/app.tsx
@@ -2,7 +2,9 @@ import { QueryClient, QueryClientProvider } from 'react-query';
 import { Route } from 'react-router-dom';
 
 import { AppLayout } from '@components/app.layout';
+import { MerchantDetails } from '@components/proof-of-reserve/components/merchant-details/merchant-details';
 import { AttestorDetailsPage } from '@pages/attestor-details/attestor-details-page';
+import { AttestorDetailsSelectPage } from '@pages/attestor-details/attestor-details-select-page';
 import { MyVaults } from '@pages/my-vaults/my-vaults';
 import { PointsPage } from '@pages/points/points-page';
 import { ProofOfReservePage } from '@pages/proof-of-reserve/proof-of-reserve-page';
@@ -36,6 +38,11 @@ export function App(): React.JSX.Element {
                       <Route path="/proof-of-reserve" element={<ProofOfReservePage />} />
                       <Route path="/points" element={<PointsPage />} />
                       <Route path="/attestor-details" element={<AttestorDetailsPage />} />
+                      <Route
+                        path="/attestor-details-select"
+                        element={<AttestorDetailsSelectPage />}
+                      />
+                      <Route path="/merchant-details/:name" element={<MerchantDetails />} />
                     </AppLayout>
                   </ProofOfReserveContextProvider>
                 </BalanceContextProvider>
diff --git a/src/app/components/attestor-details/attestor-details-select.tsx b/src/app/components/attestor-details/attestor-details-select.tsx
new file mode 100644
index 0000000..a2af4cb
--- /dev/null
+++ b/src/app/components/attestor-details/attestor-details-select.tsx
@@ -0,0 +1,94 @@
+import { MdArrowBack } from 'react-icons/md';
+import { useNavigate } from 'react-router-dom';
+
+import { HStack, Icon, Text } from '@chakra-ui/react';
+
+import { ActivityCardRow } from './components/attestor-details-card/activity-card-row';
+import { AttestorDetailsActivityCard } from './components/attestor-details-card/attestor-details-activity-card';
+import { AttestorDetailsCard } from './components/attestor-details-card/attestor-details-card';
+import { AttestorDetailsCardItem } from './components/attestor-details-card/attestor-details-card-item';
+import { AttestorDetailsCardLayout } from './components/attestor-details-card/attestor-details-card-layout';
+import { AttestorDetailsTotalCard } from './components/attestor-details-card/attestor-details-total-card';
+import { AttestorDetailsLayout } from './components/attestor-details-layout';
+import { AttestorSelectTable } from './components/attestor-details-table/attestor-select-table';
+
+export function AttestorDetailsSelect(): React.JSX.Element {
+  const navigate = useNavigate();
+  return (
+    <AttestorDetailsLayout>
+      <Text w={'100%'} color={'white'} fontSize={'6xl'} fontWeight={500}>
+        DLC-Link Attestor 1
+      </Text>
+      <Text variant={'navigate'} fontSize={'xl'} onClick={() => navigate('/attestor-details')}>
+        <HStack spacing={2} alignItems="center">
+          <Icon as={MdArrowBack} />
+          <Text>Back to the List</Text>
+        </HStack>
+      </Text>
+
+      <AttestorDetailsCard>
+        <AttestorDetailsCardLayout
+          width={'245px'}
+          bgGradient={`linear(to-r, #AC50EF, #7059FB, #2ECFF6)`}
+        >
+          <AttestorDetailsTotalCard>
+            <>
+              <AttestorDetailsCardItem label={'Validation Success Rate'}>
+                <Text fontSize={'4xl'} fontWeight={600} color={'white'}>
+                  100%
+                </Text>
+              </AttestorDetailsCardItem>
+
+              <AttestorDetailsCardItem label={'Total Validations'}>
+                <Text color={'white'} fontSize={'xl'} fontWeight={600}>
+                  2
+                </Text>
+              </AttestorDetailsCardItem>
+            </>
+          </AttestorDetailsTotalCard>
+        </AttestorDetailsCardLayout>
+        <AttestorDetailsCardLayout
+          width={'245px'}
+          bgGradient={`linear(to-r, #AC50EF, #7059FB, #2ECFF6)`}
+        >
+          <AttestorDetailsTotalCard>
+            <>
+              <AttestorDetailsCardItem label={'Total Delegation'}>
+                <Text fontSize={'4xl'} fontWeight={600} color={'white'}>
+                  100%
+                </Text>
+              </AttestorDetailsCardItem>
+              <AttestorDetailsCardItem label={'Total Delegation'}>
+                <Text color={'white'} fontSize={'xl'} fontWeight={600}>
+                  5
+                </Text>
+              </AttestorDetailsCardItem>
+            </>
+          </AttestorDetailsTotalCard>
+        </AttestorDetailsCardLayout>
+        <AttestorDetailsCardLayout width={'245px'}>
+          <AttestorDetailsActivityCard label={'Active Delegation'}>
+            <>
+              <ActivityCardRow name={'Fee'} value={'2.00%'}></ActivityCardRow>
+              <ActivityCardRow name={'Max Yield'} value={'2.00%'}></ActivityCardRow>
+              <ActivityCardRow name={'Delegations'} value={'78'}></ActivityCardRow>
+            </>
+          </AttestorDetailsActivityCard>
+        </AttestorDetailsCardLayout>
+        <AttestorDetailsCardLayout width={'480px'}>
+          <AttestorDetailsActivityCard label={'Active Validation'}>
+            <>
+              <ActivityCardRow name={'Time Left'} value={'347 days and 20 hours'}></ActivityCardRow>
+              <ActivityCardRow name={'Average Response'} value={'100.00%'}></ActivityCardRow>
+              <ActivityCardRow
+                name={'Potential rewards'}
+                value={'1,354.121 dlcBTC'}
+              ></ActivityCardRow>
+            </>
+          </AttestorDetailsActivityCard>
+        </AttestorDetailsCardLayout>
+      </AttestorDetailsCard>
+      <AttestorSelectTable />
+    </AttestorDetailsLayout>
+  );
+}
diff --git a/src/app/components/attestor-details/components/attestor-details-card/activity-card-row.tsx b/src/app/components/attestor-details/components/attestor-details-card/activity-card-row.tsx
new file mode 100644
index 0000000..71744ae
--- /dev/null
+++ b/src/app/components/attestor-details/components/attestor-details-card/activity-card-row.tsx
@@ -0,0 +1,15 @@
+import { HStack, Text } from '@chakra-ui/react';
+
+interface ActivityCardRowProps {
+  name: string;
+  value: string;
+}
+
+export function ActivityCardRow({ name, value }: ActivityCardRowProps): React.JSX.Element {
+  return (
+    <HStack w={'100%'} justifyContent={'space-between'}>
+      <Text color={'white'}>{name}</Text>
+      <Text color={'white'}>{value}</Text>
+    </HStack>
+  );
+}
diff --git a/src/app/components/attestor-details/components/attestor-details-card/attestor-details-activity-card.tsx b/src/app/components/attestor-details/components/attestor-details-card/attestor-details-activity-card.tsx
new file mode 100644
index 0000000..b2f4c21
--- /dev/null
+++ b/src/app/components/attestor-details/components/attestor-details-card/attestor-details-activity-card.tsx
@@ -0,0 +1,20 @@
+import { Text, VStack } from '@chakra-ui/react';
+
+interface AttestorDetailsActivityCardProps {
+  label: string;
+  children: React.ReactNode;
+}
+
+export function AttestorDetailsActivityCard({
+  label,
+  children,
+}: AttestorDetailsActivityCardProps): React.JSX.Element {
+  return (
+    <VStack h={'100%'} alignItems={'flex-start'} spacing={'10%'}>
+      <Text color={'white'} fontWeight={'600'}>
+        {label}
+      </Text>
+      {children}
+    </VStack>
+  );
+}
diff --git a/src/app/components/attestor-details/components/attestor-details-card/attestor-details-card-layout.tsx b/src/app/components/attestor-details/components/attestor-details-card/attestor-details-card-layout.tsx
index e02b942..ca1e816 100644
--- a/src/app/components/attestor-details/components/attestor-details-card/attestor-details-card-layout.tsx
+++ b/src/app/components/attestor-details/components/attestor-details-card/attestor-details-card-layout.tsx
@@ -3,11 +3,13 @@ import { VStack } from '@chakra-ui/react';
 interface AttestorDetailsCardLayoutProps {
   children: React.ReactNode;
   width: string;
+  bgGradient?: string;
 }
 
 export function AttestorDetailsCardLayout({
   children,
   width,
+  bgGradient,
 }: AttestorDetailsCardLayoutProps): React.JSX.Element {
   return (
     <VStack
@@ -20,6 +22,7 @@ export function AttestorDetailsCardLayout({
       borderColor={'white.03'}
       align={'stretch'}
       justifyContent={'center'}
+      bgGradient={bgGradient}
     >
       {children}
     </VStack>
diff --git a/src/app/components/attestor-details/components/attestor-details-card/attestor-details-total-card.tsx b/src/app/components/attestor-details/components/attestor-details-card/attestor-details-total-card.tsx
new file mode 100644
index 0000000..0d91381
--- /dev/null
+++ b/src/app/components/attestor-details/components/attestor-details-card/attestor-details-total-card.tsx
@@ -0,0 +1,15 @@
+import { VStack } from '@chakra-ui/react';
+
+interface AttestorDetailsTotalCardProps {
+  children: React.ReactNode;
+}
+
+export function AttestorDetailsTotalCard({
+  children,
+}: AttestorDetailsTotalCardProps): React.JSX.Element {
+  return (
+    <VStack h={'100%'} alignItems={'flex-start'}>
+      {children}
+    </VStack>
+  );
+}
diff --git a/src/app/components/attestor-details/components/attestor-details-card/attestor-details-validators-card.tsx b/src/app/components/attestor-details/components/attestor-details-card/attestor-details-validators-card.tsx
index c3007b8..484a3c0 100644
--- a/src/app/components/attestor-details/components/attestor-details-card/attestor-details-validators-card.tsx
+++ b/src/app/components/attestor-details/components/attestor-details-card/attestor-details-validators-card.tsx
@@ -5,34 +5,29 @@ import { AttestorDetailsCardItem } from './attestor-details-card-item';
 export function AttestorDetailsValidatorsCard(): React.JSX.Element {
   return (
     <VStack h={'100%'} alignItems={'flex-start'}>
-      <AttestorDetailsCardItem
-        label={'Active Validators'}
-        children={
-          <HStack alignItems={'baseline'}>
-            <Text
-              fontSize={'4xl'}
-              fontWeight={600}
-              bgGradient={`linear(to-r, #AC50EF, #7059FB, #2ECFF6)`}
-              bgClip="text"
-            >
-              1478
-            </Text>
-            <Text color={'white.03'}>(30.82%)</Text>
-          </HStack>
-        }
-      />
+      <AttestorDetailsCardItem label={'Active Validators'}>
+        <HStack alignItems={'baseline'}>
+          <Text
+            fontSize={'4xl'}
+            fontWeight={600}
+            bgGradient={`linear(to-r, #AC50EF, #7059FB, #2ECFF6)`}
+            bgClip="text"
+          >
+            1478
+          </Text>
+          <Text color={'white.03'}>(30.82%)</Text>
+        </HStack>
+      </AttestorDetailsCardItem>
+
       <Divider />
-      <AttestorDetailsCardItem
-        label={'Non-Vote Validators'}
-        children={
-          <HStack alignItems={'baseline'}>
-            <Text color={'white'} fontSize={'4xl'} fontWeight={600}>
-              3463
-            </Text>
-            <Text color={'white.03'}>(60.18%)</Text>
-          </HStack>
-        }
-      />
+      <AttestorDetailsCardItem label={'Non-Vote Validators'}>
+        <HStack alignItems={'baseline'}>
+          <Text color={'white'} fontSize={'4xl'} fontWeight={600}>
+            3463
+          </Text>
+          <Text color={'white.03'}>(60.18%)</Text>
+        </HStack>
+      </AttestorDetailsCardItem>
     </VStack>
   );
 }
diff --git a/src/app/components/attestor-details/components/attestor-details-layout.tsx b/src/app/components/attestor-details/components/attestor-details-layout.tsx
index 1182ea5..329098c 100644
--- a/src/app/components/attestor-details/components/attestor-details-layout.tsx
+++ b/src/app/components/attestor-details/components/attestor-details-layout.tsx
@@ -3,7 +3,7 @@ import { HasChildren } from '@models/has-children';
 
 export function AttestorDetailsLayout({ children }: HasChildren): React.JSX.Element {
   return (
-    <VStack w={'1280px'} spacing={'20px'}>
+    <VStack w={'1280px'} spacing={'20px'} align={'left'}>
       {children}
     </VStack>
   );
diff --git a/src/app/components/attestor-details/components/attestor-details-table/attestor-details-table.tsx b/src/app/components/attestor-details/components/attestor-details-table/attestor-details-table.tsx
index f26eb10..4d8fa5d 100644
--- a/src/app/components/attestor-details/components/attestor-details-table/attestor-details-table.tsx
+++ b/src/app/components/attestor-details/components/attestor-details-table/attestor-details-table.tsx
@@ -1,12 +1,38 @@
+import { exampleAttestorDetailsTableItems } from '@shared/examples/example-attestor-details-table-items';
+
 import { AttestorDetailsTableBody } from './components/attestor-details-table-body/attestor-details-table-body';
 import { AttestorDetailsTableHeader } from './components/attestor-details-table-header/attestor-details-table-header';
+import { AttestorDetailsTableHeaderText } from './components/attestor-details-table-header/attestor-details-table-header-text';
+import { AttestorDetailsTableItem } from './components/attestor-details-table-item';
 import { AttestorDetailsTableLayout } from './components/attestor-details-table-layout';
 
 export function AttestorDetailsTable(): React.JSX.Element {
   return (
     <AttestorDetailsTableLayout>
-      <AttestorDetailsTableHeader />
-      <AttestorDetailsTableBody />
+      <AttestorDetailsTableHeader>
+        <>
+          <AttestorDetailsTableHeaderText width={'20%'}>Node</AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'15%'}>
+            Observed Response
+          </AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'10%'}>Total Stake</AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'5%'}>Del.</AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'5%'}>Fee</AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'10%'}>
+            Comulative Stake
+          </AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'10%'}>Max Yield</AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'15%'}>Start Date</AttestorDetailsTableHeaderText>
+        </>
+      </AttestorDetailsTableHeader>
+
+      <AttestorDetailsTableBody>
+        <>
+          {exampleAttestorDetailsTableItems.map(item => (
+            <AttestorDetailsTableItem key={item.node} {...item} />
+          ))}
+        </>
+      </AttestorDetailsTableBody>
     </AttestorDetailsTableLayout>
   );
 }
diff --git a/src/app/components/attestor-details/components/attestor-details-table/attestor-select-table.tsx b/src/app/components/attestor-details/components/attestor-details-table/attestor-select-table.tsx
new file mode 100644
index 0000000..31793ba
--- /dev/null
+++ b/src/app/components/attestor-details/components/attestor-details-table/attestor-select-table.tsx
@@ -0,0 +1,32 @@
+import { exampleAttestorSelectTableItems } from '@shared/examples/example-attestor-select-table-items';
+
+import { AttestorDetailsTableBody } from './components/attestor-details-table-body/attestor-details-table-body';
+import { AttestorDetailsTableHeader } from './components/attestor-details-table-header/attestor-details-table-header';
+import { AttestorDetailsTableHeaderText } from './components/attestor-details-table-header/attestor-details-table-header-text';
+import { AttestorDetailsTableLayout } from './components/attestor-details-table-layout';
+import { AttestorSelectTableItem } from './components/attestor-select-table-item';
+
+export function AttestorSelectTable(): React.JSX.Element {
+  return (
+    <AttestorDetailsTableLayout>
+      <AttestorDetailsTableHeader>
+        <>
+          <AttestorDetailsTableHeaderText width={'20%'}>#</AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'16%'}>Time</AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'16%'}>Action</AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'16%'}>Programs</AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'16%'}>Value</AttestorDetailsTableHeaderText>
+          <AttestorDetailsTableHeaderText width={'16%'}>Tokens</AttestorDetailsTableHeaderText>
+        </>
+      </AttestorDetailsTableHeader>
+
+      <AttestorDetailsTableBody>
+        <>
+          {exampleAttestorSelectTableItems.map(item => (
+            <AttestorSelectTableItem key={item.hash} {...item} />
+          ))}
+        </>
+      </AttestorDetailsTableBody>
+    </AttestorDetailsTableLayout>
+  );
+}
diff --git a/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-body/attestor-details-table-body.tsx b/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-body/attestor-details-table-body.tsx
index c1ecbb4..4956d25 100644
--- a/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-body/attestor-details-table-body.tsx
+++ b/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-body/attestor-details-table-body.tsx
@@ -1,23 +1,15 @@
 import { VStack } from '@chakra-ui/react';
-import { scrollBarCSS } from '@styles/css-styles';
 
-import { exampleAttestorDetailsTableItems } from '@shared/examples/example-attestor-details-table-items';
-
-import { AttestorDetailsTableItem } from '../attestor-details-table-item';
+interface AttestorDetailsTableBodyProps {
+  children: React.ReactNode;
+}
 
-export function AttestorDetailsTableBody(): React.JSX.Element {
+export function AttestorDetailsTableBody({
+  children,
+}: AttestorDetailsTableBodyProps): React.JSX.Element {
   return (
-    <VStack
-      w={'100%'}
-      pb={'15px'}
-      pr={'15px'}
-      overflowY={'scroll'}
-      overflowX={'hidden'}
-      css={scrollBarCSS}
-    >
-      {exampleAttestorDetailsTableItems.map(item => (
-        <AttestorDetailsTableItem key={item.node} {...item} />
-      ))}
+    <VStack w={'100%'} pb={'50px'} pr={'15px'}>
+      {children}
     </VStack>
   );
 }
diff --git a/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-header/attestor-details-table-header.tsx b/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-header/attestor-details-table-header.tsx
index 79be300..35e24c5 100644
--- a/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-header/attestor-details-table-header.tsx
+++ b/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-header/attestor-details-table-header.tsx
@@ -1,22 +1,15 @@
 import { HStack } from '@chakra-ui/react';
 
-import { AttestorDetailsTableHeaderText } from './attestor-details-table-header-text';
+interface AttestorDetailsTableHeaderProps {
+  children: React.ReactNode;
+}
 
-export function AttestorDetailsTableHeader(): React.JSX.Element {
+export function AttestorDetailsTableHeader({
+  children,
+}: AttestorDetailsTableHeaderProps): React.JSX.Element {
   return (
     <HStack w={'98%'} px={'10px'} justifyContent={'space-between'}>
-      <AttestorDetailsTableHeaderText width={'20%'}>Node</AttestorDetailsTableHeaderText>
-      <AttestorDetailsTableHeaderText width={'15%'}>
-        Observed Response
-      </AttestorDetailsTableHeaderText>
-      <AttestorDetailsTableHeaderText width={'10%'}>Total Stake</AttestorDetailsTableHeaderText>
-      <AttestorDetailsTableHeaderText width={'5%'}>Del.</AttestorDetailsTableHeaderText>
-      <AttestorDetailsTableHeaderText width={'5%'}>Fee</AttestorDetailsTableHeaderText>
-      <AttestorDetailsTableHeaderText width={'10%'}>
-        Comulative Stake
-      </AttestorDetailsTableHeaderText>
-      <AttestorDetailsTableHeaderText width={'10%'}>Max Yield</AttestorDetailsTableHeaderText>
-      <AttestorDetailsTableHeaderText width={'15%'}>Start Date</AttestorDetailsTableHeaderText>
+      {children}
     </HStack>
   );
 }
diff --git a/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-item.tsx b/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-item.tsx
index 5a01e8b..5e2b3f0 100644
--- a/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-item.tsx
+++ b/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-item.tsx
@@ -1,8 +1,10 @@
 /* eslint-disable */
+import { useNavigate } from 'react-router-dom';
+
 import { HStack, Image, Text } from '@chakra-ui/react';
 import { CustomSkeleton } from '@components/custom-skeleton/custom-skeleton';
 
-interface AttestorDetailsTableItem {
+interface AttestorDetailsTableItemProps {
   node: string;
   observedResponse: string;
   totalStake: number;
@@ -14,13 +16,15 @@ interface AttestorDetailsTableItem {
 }
 
 export function AttestorDetailsTableItem(
-  attestorDetailsTableItem: AttestorDetailsTableItem
+  attestorDetailsTableItem: AttestorDetailsTableItemProps
 ): React.JSX.Element {
   if (!attestorDetailsTableItem) return <CustomSkeleton height={'35px'} />;
 
   const { node, observedResponse, totalStake, del, fee, ownerRewards, maxYield, startDate } =
     attestorDetailsTableItem;
 
+  const navigate = useNavigate();
+
   return (
     <HStack
       p={'10px'}
@@ -35,7 +39,13 @@ export function AttestorDetailsTableItem(
     >
       <HStack w={'20%'}>
         <Image src={'/images/logos/dlc-btc-logo.svg'} alt={'dlcBTC Logo'} boxSize={'30px'} />
-        <Text color={'white'} fontSize={'sm'} fontWeight={500}>
+        <Text
+          color={'white'}
+          fontSize={'sm'}
+          fontWeight={500}
+          variant={'navigate'}
+          onClick={() => navigate('/attestor-details-select')}
+        >
           {node}
         </Text>
       </HStack>
diff --git a/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-layout.tsx b/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-layout.tsx
index cd3bbb4..90d64c8 100644
--- a/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-layout.tsx
+++ b/src/app/components/attestor-details/components/attestor-details-table/components/attestor-details-table-layout.tsx
@@ -1,22 +1,19 @@
 import { VStack } from '@chakra-ui/react';
-import { FadeLayer } from '@components/fade-layer/fade-layer';
 import { HasChildren } from '@models/has-children';
 
 export function AttestorDetailsTableLayout({ children }: HasChildren): React.JSX.Element {
   return (
     <VStack
       w={'100%'}
-      h={'500px'}
+      h={'520px'}
       p={'15px'}
       bg={'background.container.01'}
       alignItems={'flex-start'}
       borderRadius={'md'}
     >
-      <FadeLayer h={'500px'} fh={'35px'}>
-        <VStack w={'100%'} h={'500px'} alignItems={'flex-start'} spacing={'15px'}>
-          {children}
-        </VStack>
-      </FadeLayer>
+      <VStack w={'100%'} alignItems={'flex-start'} spacing={'15px'}>
+        {children}
+      </VStack>
     </VStack>
   );
 }
diff --git a/src/app/components/attestor-details/components/attestor-details-table/components/attestor-select-table-item.tsx b/src/app/components/attestor-details/components/attestor-details-table/components/attestor-select-table-item.tsx
new file mode 100644
index 0000000..5812ae9
--- /dev/null
+++ b/src/app/components/attestor-details/components/attestor-details-table/components/attestor-select-table-item.tsx
@@ -0,0 +1,56 @@
+/* eslint-disable */
+import { HStack, Image, Text } from '@chakra-ui/react';
+import { CustomSkeleton } from '@components/custom-skeleton/custom-skeleton';
+
+interface AttestorSelectTableItemProps {
+  hash: string;
+  time: string;
+  action: string;
+  programs: string;
+  value: string;
+  token: string;
+}
+
+export function AttestorSelectTableItem(
+  attestorSelectTableItem: AttestorSelectTableItemProps
+): React.JSX.Element {
+  if (!attestorSelectTableItem) return <CustomSkeleton height={'35px'} />;
+
+  const { hash, time, action, programs, value, token } = attestorSelectTableItem;
+
+  return (
+    <HStack
+      p={'10px'}
+      w={'100%'}
+      h={'50px'}
+      bg={'background.content.01'}
+      blendMode={'screen'}
+      border={'1px solid'}
+      borderRadius={'md'}
+      borderColor={'border.white.01'}
+      justifyContent={'space-between'}
+    >
+      <HStack w={'20%'}>
+        <Image src={'/images/logos/dlc-btc-logo.svg'} alt={'dlcBTC Logo'} boxSize={'30px'} />
+        <Text color={'white'} fontSize={'sm'} fontWeight={500}>
+          {hash}
+        </Text>
+      </HStack>
+      <Text w={'16%'} color={'white'} fontSize={'sm'} fontWeight={800}>
+        {time}
+      </Text>
+      <Text w={'16%'} color={'white'} fontSize={'sm'}>
+        {action}
+      </Text>
+      <Text w={'16%'} color={'white'} fontSize={'sm'}>
+        {programs}
+      </Text>
+      <Text w={'16%'} color={'white'} fontSize={'sm'}>
+        {value}
+      </Text>
+      <Text w={'16%'} color={'white'} fontSize={'sm'}>
+        {token}
+      </Text>
+    </HStack>
+  );
+}
diff --git a/src/app/components/generic-table/components/generic-table-body.tsx b/src/app/components/generic-table/components/generic-table-body.tsx
new file mode 100644
index 0000000..4e609f4
--- /dev/null
+++ b/src/app/components/generic-table/components/generic-table-body.tsx
@@ -0,0 +1,6 @@
+import { VStack } from '@chakra-ui/react';
+import { HasChildren } from '@models/has-children';
+
+export function GenericTableBody({ children }: HasChildren): React.JSX.Element {
+  return <VStack w={'100%'}>{children}</VStack>;
+}
diff --git a/src/app/components/generic-table/components/generic-table-header-text.tsx b/src/app/components/generic-table/components/generic-table-header-text.tsx
new file mode 100644
index 0000000..d934842
--- /dev/null
+++ b/src/app/components/generic-table/components/generic-table-header-text.tsx
@@ -0,0 +1,27 @@
+import React from 'react';
+
+import { Text } from '@chakra-ui/react';
+
+interface GenericTableHeaderTextProps {
+  w?: string;
+  color?: string;
+  fontSize?: string;
+  fontWeight?: string;
+  children: React.ReactNode;
+  pl?: string;
+}
+
+export function GenericTableHeaderText({
+  w = '20%',
+  color = 'white',
+  fontSize = 'small',
+  children,
+  fontWeight = '600',
+  pl = '10px',
+}: GenericTableHeaderTextProps): React.JSX.Element {
+  return (
+    <Text w={w} color={color} fontSize={fontSize} fontWeight={fontWeight} pl={pl}>
+      {children}
+    </Text>
+  );
+}
diff --git a/src/app/components/generic-table/components/generic-table-header.tsx b/src/app/components/generic-table/components/generic-table-header.tsx
new file mode 100644
index 0000000..e2cf312
--- /dev/null
+++ b/src/app/components/generic-table/components/generic-table-header.tsx
@@ -0,0 +1,9 @@
+import { HStack } from '@chakra-ui/react';
+
+interface GenericTableHeaderProps {
+  children: React.ReactNode;
+}
+
+export function GenericTableHeader({ children }: GenericTableHeaderProps): React.JSX.Element {
+  return <HStack w={'100% '}>{children}</HStack>;
+}
diff --git a/src/app/components/generic-table/components/generic-table-layout.tsx b/src/app/components/generic-table/components/generic-table-layout.tsx
new file mode 100644
index 0000000..3b396b3
--- /dev/null
+++ b/src/app/components/generic-table/components/generic-table-layout.tsx
@@ -0,0 +1,35 @@
+import { VStack } from '@chakra-ui/react';
+
+interface GenericTableLayoutProps {
+  width?: string;
+  height?: string;
+  padding?: string;
+  alignItems?: string;
+  borderRadius?: string;
+  bg?: string;
+  children: React.ReactNode;
+}
+
+export function GenericTableLayout({
+  width = '100%',
+  height = '500px',
+  padding = '15px',
+  alignItems = 'flex-start',
+  borderRadius = 'md',
+  children,
+  bg = 'background.container.01',
+}: GenericTableLayoutProps): React.JSX.Element {
+  return (
+    <VStack
+      w={width}
+      h={height}
+      minH={'100px'}
+      padding={padding}
+      alignItems={alignItems}
+      borderRadius={borderRadius}
+      bg={bg}
+    >
+      {children}
+    </VStack>
+  );
+}
diff --git a/src/app/components/proof-of-reserve/components/merchant-details/components/merchant-details-layout.tsx b/src/app/components/proof-of-reserve/components/merchant-details/components/merchant-details-layout.tsx
new file mode 100644
index 0000000..4695658
--- /dev/null
+++ b/src/app/components/proof-of-reserve/components/merchant-details/components/merchant-details-layout.tsx
@@ -0,0 +1,10 @@
+import { VStack } from '@chakra-ui/react';
+import { HasChildren } from '@models/has-children';
+
+export function MerchantDetailsLayout({ children }: HasChildren): React.JSX.Element {
+  return (
+    <VStack w={'1280px'} spacing={'30px'} alignItems={'flex-start'}>
+      {children}
+    </VStack>
+  );
+}
diff --git a/src/app/components/proof-of-reserve/components/merchant-details/merchant-details.tsx b/src/app/components/proof-of-reserve/components/merchant-details/merchant-details.tsx
new file mode 100644
index 0000000..20728b9
--- /dev/null
+++ b/src/app/components/proof-of-reserve/components/merchant-details/merchant-details.tsx
@@ -0,0 +1,103 @@
+import { useContext } from 'react';
+import { MdArrowBack } from 'react-icons/md';
+import { useQuery } from 'react-query';
+import { useNavigate, useParams } from 'react-router-dom';
+
+import { Divider, HStack, Icon, Image, Text } from '@chakra-ui/react';
+import { useEthereum } from '@hooks/use-ethereum';
+import { Merchant } from '@models/merchant';
+import { bitcoin, dlcBTC } from '@models/token';
+import { ProofOfReserveContext } from '@providers/proof-of-reserve-context-provider';
+
+import { formatName } from '@shared/utilities';
+
+import { MerchantDetailsTableItemProps } from '../merchant-table/components/merchant-details-table-item';
+import { MerchantDetailsTable } from '../merchant-table/merchant-details-table';
+import { TokenStatsBoardToken } from '../token-stats-board/components/token-stats-board-token';
+import { TokenStatsBoardTVL } from '../token-stats-board/components/token-stats-board-tvl';
+import { TokenStatsBoardLayout } from '../token-stats-board/token-stats-board.layout';
+import { MerchantDetailsLayout } from './components/merchant-details-layout';
+
+export function MerchantDetails(): React.JSX.Element {
+  const { name } = useParams();
+  const { proofOfReserve, bitcoinPrice } = useContext(ProofOfReserveContext);
+  const { fetchMintBurnEvents } = useEthereum();
+  const navigate = useNavigate();
+
+  const [, merchantProofOfReserves] = proofOfReserve || [
+    undefined,
+    appConfiguration.merchants.map((merchant: Merchant) => {
+      return {
+        merchant,
+        dlcBTCAmount: undefined,
+      };
+    }),
+  ];
+  const selectedMerchant = merchantProofOfReserves.find(item => item.merchant.name === name);
+
+  const { data: mintBurnEvents } = useQuery(['mintBurnEvents'], fetchMintBurnEventsHandler);
+
+  if (!name) return <Text>Error: No merchant name provided</Text>;
+
+  async function fetchMintBurnEventsHandler(): Promise<MerchantDetailsTableItemProps[]> {
+    if (!selectedMerchant?.merchant.address) return [];
+    const detailedEvents = await fetchMintBurnEvents(selectedMerchant.merchant.address);
+    return detailedEvents.map((event, index) => {
+      return {
+        id: index,
+        orderBook:
+          event.from.toLowerCase() === selectedMerchant.merchant.address.toLowerCase()
+            ? 'REDEEM'
+            : 'MINT',
+        amount: event.value.toNumber(),
+        inUSD: 'TODO', //TODO: calculate usd value at the time of mint
+        txHash: event.txHash,
+        date: new Date(event.timestamp * 1000).toDateString(),
+      };
+    });
+  }
+
+  return (
+    <MerchantDetailsLayout>
+      <Text
+        w={'100%'}
+        color={'white'}
+        fontSize={'5xl'}
+        fontWeight={600}
+        pt={'50px'}
+        lineHeight={'60px'}
+      >
+        {`${formatName(name)} Group`}
+        <br />
+        {'Dashboard'}
+      </Text>
+      <Text variant={'navigate'} fontSize={'xl'} onClick={() => navigate('/proof-of-reserve')}>
+        <HStack spacing={2} alignItems="center">
+          <Icon as={MdArrowBack} />
+          <Text>Back to the List</Text>
+        </HStack>
+      </Text>
+
+      <TokenStatsBoardLayout width={'100%'}>
+        <HStack w={'100%'} alignItems={'center'} justifyContent={'space-evenly'}>
+          <Image
+            src={'/images/logos/amber-logo.svg'}
+            alt={'amber logo'}
+            boxSize={'100px'}
+            mx={'30px'}
+          />
+          <Divider orientation={'vertical'} px={'10px'} height={'75px'} variant={'thick'} />
+          <TokenStatsBoardTVL
+            totalSupply={selectedMerchant?.dlcBTCAmount}
+            bitcoinPrice={bitcoinPrice}
+          />
+          <Divider orientation={'vertical'} px={'10px'} height={'75px'} variant={'thick'} />
+          <TokenStatsBoardToken token={dlcBTC} totalSupply={selectedMerchant?.dlcBTCAmount} />
+          <Divider orientation={'vertical'} px={'10px'} height={'75px'} variant={'thick'} />
+          <TokenStatsBoardToken token={bitcoin} totalSupply={selectedMerchant?.dlcBTCAmount} />
+        </HStack>
+      </TokenStatsBoardLayout>
+      <MerchantDetailsTable items={mintBurnEvents} />
+    </MerchantDetailsLayout>
+  );
+}
diff --git a/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-details-table-item.tsx b/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-details-table-item.tsx
new file mode 100644
index 0000000..c115586
--- /dev/null
+++ b/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-details-table-item.tsx
@@ -0,0 +1,75 @@
+/* eslint-disable */
+import { HStack, Image, Text } from '@chakra-ui/react';
+import { CustomSkeleton } from '@components/custom-skeleton/custom-skeleton';
+import { useEthereumConfiguration } from '@hooks/use-ethereum-configuration';
+import { truncateAddress, unshiftValue } from 'dlc-btc-lib/utilities';
+
+export interface MerchantDetailsTableItemProps {
+  id: number;
+  orderBook: string;
+  amount: number;
+  inUSD: string;
+  txHash: string;
+  date: string;
+}
+
+export function MerchantDetailsTableItem(
+  merchantFocusTableItem: MerchantDetailsTableItemProps
+): React.JSX.Element {
+  if (!merchantFocusTableItem) return <CustomSkeleton height={'35px'} />;
+
+  const { orderBook, amount, txHash, date } = merchantFocusTableItem;
+
+  const { ethereumExplorerAPIURL } = useEthereumConfiguration();
+
+  const renderAmount = () => {
+    const unshiftedValue = unshiftValue(amount);
+    return orderBook === 'REDEEM' ? -unshiftedValue : unshiftedValue;
+  };
+
+  return (
+    <HStack
+      p={'10px'}
+      w={'100%'}
+      h={'50px'}
+      bg={orderBook === 'MINT' ? 'table.background.green' : 'table.background.red'}
+      blendMode={'screen'}
+      border={'1px solid'}
+      borderRadius={'md'}
+      borderColor={'border.white.01'}
+      justifyContent={'space-between'}
+    >
+      <Text
+        w={'18%'}
+        color={orderBook === 'MINT' ? 'green.mint' : 'red.redeem'}
+        fontSize={'sm'}
+        fontWeight={700}
+      >
+        {orderBook}
+      </Text>
+      <HStack w={'18%'}>
+        <Image src={'/images/logos/dlc-btc-logo.svg'} alt={'dlc BTC logo'} boxSize={'25px'} />
+        <Text color={'white'} fontSize={'sm'} fontWeight={800}>
+          {renderAmount()}
+        </Text>
+      </HStack>
+      {/* add back the USD calculation later and adjus the width accordingly */}
+      {/* <Text w={'20%'} color={'white'} fontSize={'sm'}>
+        {inUSD}
+      </Text> */}
+      <Text
+        w={'15%'}
+        color={'accent.lightBlue.01'}
+        fontSize={'sm'}
+        onClick={() => window.open(`${ethereumExplorerAPIURL}/tx/${txHash}`, '_blank')}
+        cursor={'pointer'}
+        textDecoration={'underline'}
+      >
+        {truncateAddress(txHash)}
+      </Text>
+      <Text w={'25%'} color={'white'} fontSize={'sm'}>
+        {date}
+      </Text>
+    </HStack>
+  );
+}
diff --git a/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-table-header.tsx b/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-table-header.tsx
index dc5850a..46b777a 100644
--- a/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-table-header.tsx
+++ b/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-table-header.tsx
@@ -2,7 +2,7 @@ import { HStack, Text } from '@chakra-ui/react';
 
 export function MerchantTableHeader(): React.JSX.Element {
   return (
-    <HStack px={'25px'} pt={'15px'} w={'100%'} justifyContent={'space-between'}>
+    <HStack pt={'15px'} w={'100%'} justifyContent={'space-between'}>
       <HStack w={'150px'}>
         <Text color={'white'} fontSize={'lg'} fontWeight={800}>
           Merchant
diff --git a/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-table-item.tsx b/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-table-item.tsx
index a304de7..41cd8bf 100644
--- a/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-table-item.tsx
+++ b/src/app/components/proof-of-reserve/components/merchant-table/components/merchant-table-item.tsx
@@ -1,7 +1,7 @@
 import React from 'react';
+import { useNavigate } from 'react-router-dom';
 
 import { Button, HStack, Image, Skeleton, Text } from '@chakra-ui/react';
-import { useEthereumConfiguration } from '@hooks/use-ethereum-configuration';
 import { Merchant } from '@models/merchant';
 
 interface MerchantTableItemProps {
@@ -15,10 +15,11 @@ export function MerchantTableItem({
 }: MerchantTableItemProps): React.ReactElement {
   //TODO: replace name with logo when the logo is available
   const { name } = merchant;
+  const navigate = useNavigate();
 
-  const { ethereumExplorerAPIURL } = useEthereumConfiguration();
+  //const { ethereumExplorerAPIURL } = useEthereumConfiguration();
   return (
-    <HStack px={'25px'} w={'100%'} justifyContent={'space-between'}>
+    <HStack w={'100%'} justifyContent={'space-between'}>
       <HStack w={'150px'}>
         <Text
           fontSize={'2xl'}
@@ -40,9 +41,7 @@ export function MerchantTableItem({
       <Button
         w={'150px'}
         variant={'merchantTableItem'}
-        onClick={() =>
-          window.open(`${ethereumExplorerAPIURL}/address/${merchant.address}`, '_blank')
-        }
+        onClick={() => navigate(`/merchant-details/${merchant.name}`)}
       >
         <Text color={'white.01'} fontSize={'xs'}>
           Mint/Redeem History
diff --git a/src/app/components/proof-of-reserve/components/merchant-table/merchant-details-table.tsx b/src/app/components/proof-of-reserve/components/merchant-table/merchant-details-table.tsx
new file mode 100644
index 0000000..85e4ad6
--- /dev/null
+++ b/src/app/components/proof-of-reserve/components/merchant-table/merchant-details-table.tsx
@@ -0,0 +1,32 @@
+import { Skeleton } from '@chakra-ui/react';
+import { GenericTableBody } from '@components/generic-table/components/generic-table-body';
+import { GenericTableHeader } from '@components/generic-table/components/generic-table-header';
+import { GenericTableHeaderText } from '@components/generic-table/components/generic-table-header-text';
+import { GenericTableLayout } from '@components/generic-table/components/generic-table-layout';
+
+import { MerchantDetailsTableItem } from './components/merchant-details-table-item';
+
+interface MerchantDetailsTableProps {
+  items?: any[];
+}
+
+export function MerchantDetailsTable({ items }: MerchantDetailsTableProps): React.JSX.Element {
+  const dynamicHeight = items ? items.length * 65 + 20 : 20;
+
+  return (
+    <GenericTableLayout height={`${dynamicHeight}px`}>
+      <GenericTableHeader>
+        <GenericTableHeaderText w={'25%'}>Order Book</GenericTableHeaderText>
+        <GenericTableHeaderText w={'25%'}>Amount</GenericTableHeaderText>
+        {/* <GenericTableHeaderText>in USD</GenericTableHeaderText> */}
+        <GenericTableHeaderText w={'25%'}>Transaction</GenericTableHeaderText>
+        <GenericTableHeaderText>Date</GenericTableHeaderText>
+      </GenericTableHeader>
+      <Skeleton isLoaded={items !== undefined} height={'50px'} w={'100%'}>
+        <GenericTableBody>
+          {items?.map(item => <MerchantDetailsTableItem key={item.id} {...item} />)}
+        </GenericTableBody>
+      </Skeleton>
+    </GenericTableLayout>
+  );
+}
diff --git a/src/app/components/proof-of-reserve/components/merchant-table/merchant-table-layout.tsx b/src/app/components/proof-of-reserve/components/merchant-table/merchant-table-layout.tsx
index ac75246..181f742 100644
--- a/src/app/components/proof-of-reserve/components/merchant-table/merchant-table-layout.tsx
+++ b/src/app/components/proof-of-reserve/components/merchant-table/merchant-table-layout.tsx
@@ -3,7 +3,7 @@ import { HasChildren } from '@models/has-children';
 
 export function MerchantTableLayout({ children }: HasChildren): React.JSX.Element {
   return (
-    <VStack w={'50%'} h={'275px'} px={'15px'} alignItems={'flex-start'} borderRadius={'md'}>
+    <VStack w={'50%'} h={'275px'} alignItems={'flex-start'} borderRadius={'md'}>
       {children}
     </VStack>
   );
diff --git a/src/app/components/proof-of-reserve/components/proof-of-reserve-layout.tsx b/src/app/components/proof-of-reserve/components/proof-of-reserve-layout.tsx
index 00fe6c4..280366d 100644
--- a/src/app/components/proof-of-reserve/components/proof-of-reserve-layout.tsx
+++ b/src/app/components/proof-of-reserve/components/proof-of-reserve-layout.tsx
@@ -3,7 +3,7 @@ import { HasChildren } from '@models/has-children';
 
 export function ProofOfReserveLayout({ children }: HasChildren): React.JSX.Element {
   return (
-    <VStack w={'1280px'} spacing={'20px'}>
+    <VStack w={'100%'} spacing={'20px'}>
       {children}
     </VStack>
   );
diff --git a/src/app/components/proof-of-reserve/components/token-stats-board/components/token-stats-board-token.tsx b/src/app/components/proof-of-reserve/components/token-stats-board/components/token-stats-board-token.tsx
index 8f5ca07..ae35e36 100644
--- a/src/app/components/proof-of-reserve/components/token-stats-board/components/token-stats-board-token.tsx
+++ b/src/app/components/proof-of-reserve/components/token-stats-board/components/token-stats-board-token.tsx
@@ -22,13 +22,13 @@ export function TokenStatsBoardToken({
 
   return (
     <VStack w={'100%'} h={'100%'} alignItems={'start'}>
-      <Text color={'accent.lightBlue.01'} fontWeight={600} fontSize={'md'}>
+      <Text color={'white.01'} fontWeight={600} fontSize={'lg'}>
         {`${token.name} ${tokenSuffix}`}
       </Text>
       <Skeleton isLoaded={totalSupply !== undefined} h={'auto'} w={'100%'}>
         <HStack>
           <Image src={token.logo} alt={token.logoAlt} boxSize={'25px'} />
-          <Text color={'white'} fontWeight={200} fontSize={'3xl'}>
+          <Text color={'white.01'} fontWeight={200} fontSize={'2xl'}>
             {totalSupply}
           </Text>
         </HStack>
diff --git a/src/app/components/proof-of-reserve/components/token-stats-board/components/token-stats-board-tvl.tsx b/src/app/components/proof-of-reserve/components/token-stats-board/components/token-stats-board-tvl.tsx
index 79e8cad..5259c14 100644
--- a/src/app/components/proof-of-reserve/components/token-stats-board/components/token-stats-board-tvl.tsx
+++ b/src/app/components/proof-of-reserve/components/token-stats-board/components/token-stats-board-tvl.tsx
@@ -1,4 +1,4 @@
-import { Divider, Skeleton, Text, VStack } from '@chakra-ui/react';
+import { Skeleton, Text, VStack } from '@chakra-ui/react';
 
 interface TokenStatsBoardTVLProps {
   totalSupply: number | undefined;
@@ -10,24 +10,18 @@ export function TokenStatsBoardTVL({
   bitcoinPrice,
 }: TokenStatsBoardTVLProps): React.JSX.Element {
   return (
-    <VStack w={'100%'} px={'25px'} py={'15px'} alignItems={'flex-start'}>
-      <Text color={'white.01'} fontSize={'3xl'} fontWeight={'200'} textAlign={'left'}>
+    <VStack w={'100%'} alignItems={'flex-start'}>
+      <Text color={'white.01'} fontSize={'lg'} fontWeight={'600'} textAlign={'left'}>
         TVL
       </Text>
       <Skeleton w={'100%'} isLoaded={totalSupply !== undefined}>
-        <Text
-          fontSize={'5xl'}
-          fontWeight={600}
-          bgGradient={`linear(to-r, #AC50EF, #7059FB, #2ECFF6)`}
-          bgClip="text"
-        >
+        <Text fontSize={'2xl'} fontWeight={600} color={'white.01'}>
           $
           {totalSupply && bitcoinPrice
             ? `${Math.floor(totalSupply * bitcoinPrice).toLocaleString('en-US')} USD`
             : 0}
         </Text>
       </Skeleton>
-      <Divider h={'25px'} orientation={'horizontal'} variant={'thick'} />
     </VStack>
   );
 }
diff --git a/src/app/components/proof-of-reserve/components/token-stats-board/token-stats-board.layout.tsx b/src/app/components/proof-of-reserve/components/token-stats-board/token-stats-board.layout.tsx
index c00a278..68dedd7 100644
--- a/src/app/components/proof-of-reserve/components/token-stats-board/token-stats-board.layout.tsx
+++ b/src/app/components/proof-of-reserve/components/token-stats-board/token-stats-board.layout.tsx
@@ -2,12 +2,16 @@ import { VStack } from '@chakra-ui/react';
 
 interface TokenStatsBoardLayoutProps {
   children: React.ReactNode;
+  width?: string;
 }
 
-export function TokenStatsBoardLayout({ children }: TokenStatsBoardLayoutProps): React.JSX.Element {
+export function TokenStatsBoardLayout({
+  children,
+  width = '100%',
+}: TokenStatsBoardLayoutProps): React.JSX.Element {
   return (
     <VStack
-      w={'1280px'}
+      w={width}
       h={'auto'}
       p={'15px'}
       justifyContent={'center'}
diff --git a/src/app/components/proof-of-reserve/proof-of-reserve.tsx b/src/app/components/proof-of-reserve/proof-of-reserve.tsx
index a004e83..659637a 100644
--- a/src/app/components/proof-of-reserve/proof-of-reserve.tsx
+++ b/src/app/components/proof-of-reserve/proof-of-reserve.tsx
@@ -1,10 +1,16 @@
 import { useContext } from 'react';
+import { useQuery } from 'react-query';
 
-import { Divider, HStack, Text, VStack } from '@chakra-ui/react';
+import { Divider, HStack, Text } from '@chakra-ui/react';
+import { ProtocolHistoryTableItemProps } from '@components/protocol-history-table/components/protocol-history-table-item';
+import { ProtocolHistoryTable } from '@components/protocol-history-table/protocol-history-table';
+import { useEthereum } from '@hooks/use-ethereum';
 import { Merchant } from '@models/merchant';
 import { bitcoin, dlcBTC } from '@models/token';
 import { ProofOfReserveContext } from '@providers/proof-of-reserve-context-provider';
 
+import { BURN_ADDRESS } from '@shared/constants/ethereum.constants';
+
 import { MerchantTableHeader } from './components/merchant-table/components/merchant-table-header';
 import { MerchantTableItem } from './components/merchant-table/components/merchant-table-item';
 import { MerchantTableLayout } from './components/merchant-table/merchant-table-layout';
@@ -15,6 +21,7 @@ import { TokenStatsBoardLayout } from './components/token-stats-board/token-stat
 
 export function ProofOfReserve(): React.JSX.Element {
   const { proofOfReserve, totalSupply, bitcoinPrice } = useContext(ProofOfReserveContext);
+  const { fetchAllMintBurnEvents } = useEthereum();
 
   const [proofOfReserveSum, merchantProofOfReserves] = proofOfReserve || [
     undefined,
@@ -26,6 +33,25 @@ export function ProofOfReserve(): React.JSX.Element {
     }),
   ];
 
+  const { data: allMintBurnEvents } = useQuery(
+    ['allMintBurnEvents'],
+    fetchAllMintBurnEventsHandler
+  );
+
+  async function fetchAllMintBurnEventsHandler(): Promise<ProtocolHistoryTableItemProps[]> {
+    const detailedEvents = await fetchAllMintBurnEvents();
+    return detailedEvents.map((event, index) => {
+      const isMint = event.from.toLowerCase() === BURN_ADDRESS.toLowerCase();
+      return {
+        id: index,
+        dlcBTCAmount: isMint ? event.value.toNumber() : event.value.toNumber() * -1,
+        merchant: isMint ? event.to : event.from,
+        txHash: event.txHash,
+        date: new Date(event.timestamp * 1000).toDateString(),
+      };
+    });
+  }
+
   return (
     <ProofOfReserveLayout>
       <Text w={'100%'} color={'white'} fontSize={'6xl'} fontWeight={500}>
@@ -33,24 +59,22 @@ export function ProofOfReserve(): React.JSX.Element {
       </Text>
       <TokenStatsBoardLayout>
         <HStack w={'100%'}>
-          <VStack w={'50%'} alignItems={'flex-start'}>
-            <TokenStatsBoardTVL totalSupply={totalSupply} bitcoinPrice={bitcoinPrice} />
-            <HStack w={'100%'} pl={'25px'}>
-              <TokenStatsBoardToken token={dlcBTC} totalSupply={totalSupply} />
-              <Divider orientation={'vertical'} px={'15px'} height={'75px'} variant={'thick'} />
-              <TokenStatsBoardToken token={bitcoin} totalSupply={proofOfReserveSum} />
-            </HStack>
-          </VStack>
-          <Divider orientation={'vertical'} px={'15px'} height={'275px'} variant={'thick'} />
-          <MerchantTableLayout>
-            <MerchantTableHeader />
-            {merchantProofOfReserves.map(item => (
-              <MerchantTableItem key={item.merchant.name} {...item} />
-            ))}
-          </MerchantTableLayout>
+          <TokenStatsBoardTVL totalSupply={totalSupply} bitcoinPrice={bitcoinPrice} />
+          <Divider orientation={'vertical'} px={'15px'} height={'75px'} variant={'thick'} />
+          <TokenStatsBoardToken token={dlcBTC} totalSupply={totalSupply} />
+          <Divider orientation={'vertical'} px={'15px'} height={'75px'} variant={'thick'} />
+          <TokenStatsBoardToken token={bitcoin} totalSupply={proofOfReserveSum} />
         </HStack>
-        {/* <ProtocolHistoryTable /> */}
       </TokenStatsBoardLayout>
+      <HStack w={'100%'} gap={'20px'} alignItems={'flex-start'}>
+        <MerchantTableLayout>
+          <MerchantTableHeader />
+          {merchantProofOfReserves.map(item => (
+            <MerchantTableItem key={item.merchant.name} {...item} />
+          ))}
+        </MerchantTableLayout>
+        <ProtocolHistoryTable items={allMintBurnEvents} />
+      </HStack>
     </ProofOfReserveLayout>
   );
 }
diff --git a/src/app/components/protocol-history-table/components/protocol-history-table-body/protocol-history-table-body.tsx b/src/app/components/protocol-history-table/components/protocol-history-table-body/protocol-history-table-body.tsx
deleted file mode 100644
index aa1b51f..0000000
--- a/src/app/components/protocol-history-table/components/protocol-history-table-body/protocol-history-table-body.tsx
+++ /dev/null
@@ -1,24 +0,0 @@
-import { VStack } from '@chakra-ui/react';
-import { scrollBarCSS } from '@styles/css-styles';
-
-import { exampleProtocolHistoryItems } from '@shared/examples/example-protocol-history-table-items';
-
-import { ProtocolHistoryItem } from '../protocol-history-table-item';
-
-export function ProtocolHistoryTableBody(): React.JSX.Element {
-  return (
-    <VStack
-      w={'100%'}
-      pb={'15px'}
-      pr={'15px'}
-      alignItems={'start'}
-      overflowY={'scroll'}
-      overflowX={'hidden'}
-      css={scrollBarCSS}
-    >
-      {exampleProtocolHistoryItems.map(item => (
-        <ProtocolHistoryItem key={item.id} {...item} />
-      ))}
-    </VStack>
-  );
-}
diff --git a/src/app/components/protocol-history-table/components/protocol-history-table-header/protocol-history-table-header-text.tsx b/src/app/components/protocol-history-table/components/protocol-history-table-header/protocol-history-table-header-text.tsx
deleted file mode 100644
index 164d426..0000000
--- a/src/app/components/protocol-history-table/components/protocol-history-table-header/protocol-history-table-header-text.tsx
+++ /dev/null
@@ -1,12 +0,0 @@
-import React from 'react';
-
-import { Text } from '@chakra-ui/react';
-import { HasChildren } from '@models/has-children';
-
-export function ProtocolHistoryTableHeaderText({ children }: HasChildren): React.JSX.Element {
-  return (
-    <Text w={'25%'} color={'white'} fontSize={'sm'}>
-      {children}
-    </Text>
-  );
-}
diff --git a/src/app/components/protocol-history-table/components/protocol-history-table-header/protocol-history-table-header.tsx b/src/app/components/protocol-history-table/components/protocol-history-table-header/protocol-history-table-header.tsx
deleted file mode 100644
index 8e35d12..0000000
--- a/src/app/components/protocol-history-table/components/protocol-history-table-header/protocol-history-table-header.tsx
+++ /dev/null
@@ -1,14 +0,0 @@
-import { HStack } from '@chakra-ui/react';
-
-import { ProtocolHistoryTableHeaderText } from './protocol-history-table-header-text';
-
-export function ProtocolHistoryTableHeader(): React.JSX.Element {
-  return (
-    <HStack w={'95%'} pl={'10px'}>
-      <ProtocolHistoryTableHeaderText>Order Book</ProtocolHistoryTableHeaderText>
-      <ProtocolHistoryTableHeaderText>Merchant</ProtocolHistoryTableHeaderText>
-      <ProtocolHistoryTableHeaderText>BTC Reserve</ProtocolHistoryTableHeaderText>
-      <ProtocolHistoryTableHeaderText>Date</ProtocolHistoryTableHeaderText>
-    </HStack>
-  );
-}
diff --git a/src/app/components/protocol-history-table/components/protocol-history-table-item.tsx b/src/app/components/protocol-history-table/components/protocol-history-table-item.tsx
index 7b0bf7a..4516272 100644
--- a/src/app/components/protocol-history-table/components/protocol-history-table-item.tsx
+++ b/src/app/components/protocol-history-table/components/protocol-history-table-item.tsx
@@ -1,27 +1,29 @@
 /* eslint-disable */
 import { HStack, Image, Text } from '@chakra-ui/react';
 import { CustomSkeleton } from '@components/custom-skeleton/custom-skeleton';
-import { truncateAddress } from 'dlc-btc-lib/utilities';
+import { truncateAddress, unshiftValue } from 'dlc-btc-lib/utilities';
 
-interface ProtocolHistoryItem {
+export interface ProtocolHistoryTableItemProps {
   id: number;
   merchant: string;
   dlcBTCAmount: number;
-  btcReserve: string;
+  txHash: string;
   date: string;
 }
 
-export function ProtocolHistoryItem(protocolHistoryItem: ProtocolHistoryItem): React.JSX.Element {
-  if (!protocolHistoryItem) return <CustomSkeleton height={'35px'} />;
+export function ProtocolHistoryTableItem(
+  protocolHistoryTableItem: ProtocolHistoryTableItemProps
+): React.JSX.Element {
+  if (!protocolHistoryTableItem) return <CustomSkeleton height={'35px'} />;
 
-  const { merchant, dlcBTCAmount, btcReserve, date } = protocolHistoryItem;
+  const { merchant, dlcBTCAmount, txHash, date } = protocolHistoryTableItem;
 
   return (
     <HStack
       p={'10px'}
       w={'100%'}
-      h={'35px'}
-      bg={'background.content.01'}
+      h={'50px'}
+      bg={dlcBTCAmount >= 0 ? 'table.background.green' : 'table.background.red'}
       blendMode={'screen'}
       border={'1px solid'}
       borderRadius={'md'}
@@ -30,14 +32,14 @@ export function ProtocolHistoryItem(protocolHistoryItem: ProtocolHistoryItem): R
       <HStack w={'25%'}>
         <Image src={'/images/logos/dlc-btc-logo.svg'} alt={'dlcBTC Logo'} boxSize={'20px'} />
         <Text color={'white'} fontWeight={800}>
-          {dlcBTCAmount}
+          {unshiftValue(dlcBTCAmount)}
         </Text>
       </HStack>
       <Text w={'25%'} color={'white'} fontSize={'sm'} fontWeight={800}>
-        {merchant}
+        {truncateAddress(merchant)}
       </Text>
       <Text w={'25%'} color={'white'} fontSize={'sm'}>
-        {truncateAddress(btcReserve)}
+        {truncateAddress(txHash)}
       </Text>
       <Text w={'25%'} color={'white'} fontSize={'sm'}>
         {date}
diff --git a/src/app/components/protocol-history-table/components/protocol-history-table.layout.tsx b/src/app/components/protocol-history-table/components/protocol-history-table.layout.tsx
deleted file mode 100644
index fe499d2..0000000
--- a/src/app/components/protocol-history-table/components/protocol-history-table.layout.tsx
+++ /dev/null
@@ -1,22 +0,0 @@
-import { VStack } from '@chakra-ui/react';
-import { FadeLayer } from '@components/fade-layer/fade-layer';
-import { HasChildren } from '@models/has-children';
-
-export function ProtocolHistoryLayout({ children }: HasChildren): React.JSX.Element {
-  return (
-    <VStack
-      w={'50%'}
-      h={'250px'}
-      p={'15px'}
-      bg={'background.container.01'}
-      alignItems={'flex-start'}
-      borderRadius={'md'}
-    >
-      <FadeLayer h={'250px'} fh={'35px'}>
-        <VStack w={'100%'} h={'225px'} alignItems={'flex-start'} spacing={'15px'}>
-          {children}
-        </VStack>
-      </FadeLayer>
-    </VStack>
-  );
-}
diff --git a/src/app/components/protocol-history-table/protocol-history-table.tsx b/src/app/components/protocol-history-table/protocol-history-table.tsx
index e02acba..5af6392 100644
--- a/src/app/components/protocol-history-table/protocol-history-table.tsx
+++ b/src/app/components/protocol-history-table/protocol-history-table.tsx
@@ -1,14 +1,30 @@
-import { ProtocolHistoryTableBody } from './components/protocol-history-table-body/protocol-history-table-body';
-import { ProtocolHistoryTableHeader } from './components/protocol-history-table-header/protocol-history-table-header';
-import { ProtocolHistoryLayout } from './components/protocol-history-table.layout';
+import { Skeleton } from '@chakra-ui/react';
+import { GenericTableBody } from '@components/generic-table/components/generic-table-body';
+import { GenericTableHeader } from '@components/generic-table/components/generic-table-header';
+import { GenericTableHeaderText } from '@components/generic-table/components/generic-table-header-text';
+import { GenericTableLayout } from '@components/generic-table/components/generic-table-layout';
+import { ProtocolHistoryTableItem } from '@components/protocol-history-table/components/protocol-history-table-item';
+
+interface ProtocolHistoryTableProps {
+  items?: any[];
+}
+
+export function ProtocolHistoryTable({ items }: ProtocolHistoryTableProps): React.JSX.Element {
+  const dynamicHeight = items ? items.length * 65 + 20 : 20;
 
-// @ts-expect-error: ignoring because of later implementation
-// eslint-disable-next-line @typescript-eslint/no-unused-vars
-function ProtocolHistoryTable(): React.JSX.Element {
   return (
-    <ProtocolHistoryLayout>
-      <ProtocolHistoryTableHeader />
-      <ProtocolHistoryTableBody />
-    </ProtocolHistoryLayout>
+    <GenericTableLayout height={`${dynamicHeight}px`} width={'50%'}>
+      <GenericTableHeader>
+        <GenericTableHeaderText w={'25%'}>Order Book</GenericTableHeaderText>
+        <GenericTableHeaderText w={'21%'}>Merchant</GenericTableHeaderText>
+        <GenericTableHeaderText w={'25%'}>Transaction</GenericTableHeaderText>
+        <GenericTableHeaderText>Date</GenericTableHeaderText>
+      </GenericTableHeader>
+      <Skeleton isLoaded={items !== undefined} height={'50px'} w={'100%'}>
+        <GenericTableBody>
+          {items?.map(item => <ProtocolHistoryTableItem key={item.id} {...item} />)}
+        </GenericTableBody>
+      </Skeleton>
+    </GenericTableLayout>
   );
 }
diff --git a/src/app/hooks/use-ethereum-contracts.ts b/src/app/hooks/use-ethereum-contracts.ts
index df44104..42fcc25 100644
--- a/src/app/hooks/use-ethereum-contracts.ts
+++ b/src/app/hooks/use-ethereum-contracts.ts
@@ -12,17 +12,15 @@ interface UseEthereumContractsReturnType {
     ethereumSigner: ethers.providers.JsonRpcSigner,
     ethereumNetwork: EthereumNetwork
   ) => Promise<void>;
-  protocolContract: Contract | undefined;
-  observerProtocolContract: Contract | undefined;
   dlcManagerContract: Contract | undefined;
+  observerDLCManagerContract: Contract | undefined;
   dlcBTCContract: Contract | undefined;
   contractsLoaded: boolean;
 }
 
 export function useEthereumContracts(): UseEthereumContractsReturnType {
-  const protocolContract = useRef<Contract | undefined>(undefined);
-  const observerProtocolContract = useRef<Contract | undefined>(undefined);
   const dlcManagerContract = useRef<Contract | undefined>(undefined);
+  const observerDLCManagerContract = useRef<Contract | undefined>(undefined);
   const dlcBTCContract = useRef<Contract | undefined>(undefined);
 
   const [contractsLoaded, setContractsLoaded] = useState<boolean>(false);
@@ -33,33 +31,20 @@ export function useEthereumContracts(): UseEthereumContractsReturnType {
   ): Promise<void> {
     setContractsLoaded(false);
 
-    if (!protocolContract.current) {
-      const protocolContractData = await fetchEthereumDeploymentPlan(
-        'TokenManager',
+    if (!dlcManagerContract.current) {
+      const dlcManagerContractData = await fetchEthereumDeploymentPlan(
+        'DLCManager',
         ethereumNetwork
       );
       const contract = new ethers.Contract(
-        protocolContractData.contract.address,
-        protocolContractData.contract.abi,
+        dlcManagerContractData.contract.address,
+        dlcManagerContractData.contract.abi,
         ethereumSigner
       );
-      protocolContract.current = contract;
-    }
-
-    if (!observerProtocolContract.current) {
-      const observerProtocolContractData = await fetchEthereumDeploymentPlan(
-        'TokenManager',
-        ethereumNetwork
-      );
-      const contract = new ethers.Contract(
-        observerProtocolContractData.contract.address,
-        observerProtocolContractData.contract.abi,
-        new ethers.providers.WebSocketProvider(import.meta.env.VITE_ARBITRUM_OBSERVER_NODE)
-      );
-      observerProtocolContract.current = contract;
+      dlcManagerContract.current = contract;
     }
 
-    if (!dlcManagerContract.current) {
+    if (!observerDLCManagerContract.current) {
       const dlcManagerContractData = await fetchEthereumDeploymentPlan(
         'DLCManager',
         ethereumNetwork
@@ -67,9 +52,9 @@ export function useEthereumContracts(): UseEthereumContractsReturnType {
       const contract = new ethers.Contract(
         dlcManagerContractData.contract.address,
         dlcManagerContractData.contract.abi,
-        ethereumSigner
+        new ethers.providers.WebSocketProvider(import.meta.env.VITE_ARBITRUM_OBSERVER_NODE)
       );
-      dlcManagerContract.current = contract;
+      observerDLCManagerContract.current = contract;
     }
 
     if (!dlcBTCContract.current) {
@@ -110,8 +95,7 @@ export function useEthereumContracts(): UseEthereumContractsReturnType {
 
   return {
     getEthereumContracts,
-    protocolContract: protocolContract.current,
-    observerProtocolContract: observerProtocolContract.current,
+    observerDLCManagerContract: observerDLCManagerContract.current,
     dlcManagerContract: dlcManagerContract.current,
     dlcBTCContract: dlcBTCContract.current,
     contractsLoaded,
diff --git a/src/app/hooks/use-ethereum-observer.ts b/src/app/hooks/use-ethereum-observer.ts
index a310304..c680310 100644
--- a/src/app/hooks/use-ethereum-observer.ts
+++ b/src/app/hooks/use-ethereum-observer.ts
@@ -13,18 +13,18 @@ import { useEthereumContext } from './use-ethereum-context';
 export function useEthereumObserver(): void {
   const dispatch = useDispatch();
 
-  const { observerProtocolContract } = useEthereumContext();
+  const { observerDLCManagerContract } = useEthereumContext();
   const { getVault } = useEthereum();
 
   const { address, network } = useSelector((state: RootState) => state.account);
 
   useEffect(() => {
-    if (!observerProtocolContract) return;
+    if (!observerDLCManagerContract) return;
 
     console.log(`Listening to [${network?.name}]`);
-    console.log(`Listening to [${observerProtocolContract.address}]`);
+    console.log(`Listening to [${observerDLCManagerContract.address}]`);
 
-    observerProtocolContract.on('SetupVault', async (...args: any[]) => {
+    observerDLCManagerContract.on('CreateDLC', async (...args: any[]) => {
       const vaultOwner: string = args[2];
 
       if (vaultOwner.toLowerCase() !== address) return;
@@ -38,7 +38,7 @@ export function useEthereumObserver(): void {
       });
     });
 
-    observerProtocolContract.on('CloseVault', async (...args: any[]) => {
+    observerDLCManagerContract.on('CloseDLC', async (...args: any[]) => {
       const vaultOwner: string = args[1];
 
       if (vaultOwner.toLowerCase() !== address) return;
@@ -52,7 +52,7 @@ export function useEthereumObserver(): void {
       });
     });
 
-    observerProtocolContract.on('SetStatusFunded', async (...args: any[]) => {
+    observerDLCManagerContract.on('SetStatusFunded', async (...args: any[]) => {
       const vaultOwner = args[2];
 
       if (vaultOwner.toLowerCase() !== address) return;
@@ -72,7 +72,7 @@ export function useEthereumObserver(): void {
       });
     });
 
-    observerProtocolContract.on('PostCloseDLCHandler', async (...args: any[]) => {
+    observerDLCManagerContract.on('PostCloseDLC', async (...args: any[]) => {
       const vaultOwner = args[2];
 
       if (vaultOwner.toLowerCase() !== address) return;
@@ -92,5 +92,5 @@ export function useEthereumObserver(): void {
       });
     });
     // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [observerProtocolContract, network]);
+  }, [observerDLCManagerContract, network]);
 }
diff --git a/src/app/hooks/use-ethereum.ts b/src/app/hooks/use-ethereum.ts
index a950a61..7b0ed20 100644
--- a/src/app/hooks/use-ethereum.ts
+++ b/src/app/hooks/use-ethereum.ts
@@ -3,15 +3,18 @@ import { useContext } from 'react';
 import { useSelector } from 'react-redux';
 
 import { EthereumError } from '@models/error-types';
+import { DetailedEvent } from '@models/ethereum-models';
 import { EthereumNetwork } from '@models/ethereum-network';
 import { RawVault, Vault, VaultState } from '@models/vault';
 import { VaultContext } from '@providers/vault-context-provider';
 import { RootState, store } from '@store/index';
 import { vaultActions } from '@store/slices/vault/vault.actions';
 import { customShiftValue, unshiftValue } from 'dlc-btc-lib/utilities';
-import { ethers } from 'ethers';
+import { Event, ethers } from 'ethers';
 import { Logger } from 'ethers/lib/utils';
 
+import { BURN_ADDRESS } from '@shared/constants/ethereum.constants';
+
 import { useEthereumContext } from './use-ethereum-context';
 
 const SOLIDITY_CONTRACT_URL = 'https://raw.githubusercontent.com/DLC-link/dlc-solidity';
@@ -30,6 +33,8 @@ interface UseEthereumReturnType {
   getAllFundedVaults: (thereumNetwork: EthereumNetwork) => Promise<RawVault[]>;
   setupVault: (btcDepositAmount: number) => Promise<void>;
   closeVault: (vaultUUID: string) => Promise<void>;
+  fetchMintBurnEvents: (userAddress: string) => Promise<DetailedEvent[]>;
+  fetchAllMintBurnEvents: () => Promise<DetailedEvent[]>;
 }
 
 // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
@@ -45,7 +50,7 @@ export function throwEthereumError(message: string, error: any): void {
 
 export function useEthereum(): UseEthereumReturnType {
   const { vaults } = useContext(VaultContext);
-  const { protocolContract, dlcBTCContract, observerProtocolContract } = useEthereumContext();
+  const { dlcManagerContract, dlcBTCContract, observerDLCManagerContract } = useEthereumContext();
 
   const { address, network } = useSelector((state: RootState) => state.account);
 
@@ -127,9 +132,9 @@ export function useEthereum(): UseEthereumReturnType {
 
   async function getAllVaults(): Promise<void> {
     try {
-      if (!observerProtocolContract) throw new Error('Protocol contract not initialized');
-      await observerProtocolContract.callStatic.getAllVaultsForAddress(address);
-      const vaults: RawVault[] = await observerProtocolContract.getAllVaultsForAddress(address);
+      if (!observerDLCManagerContract) throw new Error('Protocol contract not initialized');
+      await observerDLCManagerContract.callStatic.getAllVaultsForAddress(address);
+      const vaults: RawVault[] = await observerDLCManagerContract.getAllVaultsForAddress(address);
       const formattedVaults: Vault[] = vaults.map(formatVault);
       if (!network) return;
       store.dispatch(
@@ -144,8 +149,8 @@ export function useEthereum(): UseEthereumReturnType {
   }
 
   async function getRawVault(vaultUUID: string): Promise<RawVault> {
-    if (!observerProtocolContract) throw new Error('Protocol contract not initialized');
-    const vault: RawVault = await observerProtocolContract.getVault(vaultUUID);
+    if (!observerDLCManagerContract) throw new Error('Protocol contract not initialized');
+    const vault: RawVault = await observerDLCManagerContract.getVault(vaultUUID);
     if (!vault) throw new Error('Vault is undefined');
     return vault;
   }
@@ -158,8 +163,8 @@ export function useEthereum(): UseEthereumReturnType {
   ): Promise<void> {
     for (let i = 0; i < maxRetries; i++) {
       try {
-        if (!observerProtocolContract) throw new Error('Protocol contract not initialized');
-        const vault: RawVault = await observerProtocolContract.getVault(vaultUUID);
+        if (!observerDLCManagerContract) throw new Error('Protocol contract not initialized');
+        const vault: RawVault = await observerDLCManagerContract.getVault(vaultUUID);
         if (!vault) throw new Error('Vault is undefined');
         if (vault.status !== vaultState) throw new Error('Vault is not in the correct state');
         const formattedVault: Vault = formatVault(vault);
@@ -206,9 +211,9 @@ export function useEthereum(): UseEthereumReturnType {
 
   async function setupVault(btcDepositAmount: number): Promise<void> {
     try {
-      if (!protocolContract) throw new Error('Protocol contract not initialized');
-      await protocolContract.callStatic.setupVault(btcDepositAmount);
-      await protocolContract.setupVault(btcDepositAmount);
+      if (!dlcManagerContract) throw new Error('Protocol contract not initialized');
+      await dlcManagerContract.callStatic.setupVault(btcDepositAmount);
+      await dlcManagerContract.setupVault(btcDepositAmount);
     } catch (error: any) {
       throwEthereumError(`Could not setup Vault: `, error);
     }
@@ -216,14 +221,77 @@ export function useEthereum(): UseEthereumReturnType {
 
   async function closeVault(vaultUUID: string) {
     try {
-      if (!protocolContract) throw new Error('Protocol contract not initialized');
-      await protocolContract.callStatic.closeVault(vaultUUID);
-      await protocolContract.closeVault(vaultUUID);
+      if (!dlcManagerContract) throw new Error('Protocol contract not initialized');
+      await dlcManagerContract.callStatic.closeVault(vaultUUID);
+      await dlcManagerContract.closeVault(vaultUUID);
     } catch (error) {
       throwEthereumError(`Could not close Vault: `, error);
     }
   }
 
+  function formatTransferEvent(event: any, timestamp: number, txHash: string): DetailedEvent {
+    return {
+      from: event.from.toLowerCase(),
+      to: event.to.toLowerCase(),
+      value: event.value,
+      timestamp,
+      txHash,
+    };
+  }
+
+  async function fetchMintBurnEvents(userAddress: string): Promise<DetailedEvent[]> {
+    const dlcBTCContract = await getDefaultProvider(network, 'DLCBTC');
+    const eventFilterTo = dlcBTCContract.filters.Transfer(BURN_ADDRESS, userAddress);
+    const eventFilterFrom = dlcBTCContract.filters.Transfer(userAddress, BURN_ADDRESS);
+    const eventsTo = await dlcBTCContract.queryFilter(eventFilterTo);
+    const eventsFrom = await dlcBTCContract.queryFilter(eventFilterFrom);
+    const events = [...eventsTo, ...eventsFrom];
+    const detailedEvents: DetailedEvent[] = [];
+
+    await Promise.all(
+      events.map(async (event: Event) => {
+        const block = await dlcBTCContract.provider.getBlock(event.blockNumber);
+        detailedEvents.push(
+          formatTransferEvent(event.args, block.timestamp, event.transactionHash)
+        );
+      })
+    );
+
+    detailedEvents.sort((a, b) => b.timestamp - a.timestamp);
+
+    return detailedEvents;
+  }
+
+  async function fetchAllMintBurnEvents(): Promise<DetailedEvent[]> {
+    const dlcBTCContract = await getDefaultProvider(network, 'DLCBTC');
+    const eventFilterTo = dlcBTCContract.filters.Transfer(BURN_ADDRESS);
+    const eventFilterFrom = dlcBTCContract.filters.Transfer(null, BURN_ADDRESS);
+    const eventsTo = await dlcBTCContract.queryFilter(eventFilterTo);
+    const eventsFrom = await dlcBTCContract.queryFilter(eventFilterFrom);
+
+    const lastNEvents = (n: number, events: Event[]) => {
+      return events.slice(events.length - n);
+    };
+    const n = 10;
+
+    const events = [...lastNEvents(n, eventsTo), ...lastNEvents(n, eventsFrom)];
+    let detailedEvents: DetailedEvent[] = [];
+
+    await Promise.all(
+      events.map(async (event: Event) => {
+        const block = await dlcBTCContract.provider.getBlock(event.blockNumber);
+        detailedEvents.push(
+          formatTransferEvent(event.args, block.timestamp, event.transactionHash)
+        );
+      })
+    );
+
+    detailedEvents.sort((a, b) => b.timestamp - a.timestamp);
+    detailedEvents = detailedEvents.slice(0, n);
+
+    return detailedEvents;
+  }
+
   return {
     getDefaultProvider,
     getDLCBTCBalance,
@@ -235,5 +303,7 @@ export function useEthereum(): UseEthereumReturnType {
     getAllFundedVaults,
     setupVault,
     closeVault,
+    fetchMintBurnEvents,
+    fetchAllMintBurnEvents,
   };
 }
diff --git a/src/app/hooks/use-points.ts b/src/app/hooks/use-points.ts
index ceefbc0..2e60006 100644
--- a/src/app/hooks/use-points.ts
+++ b/src/app/hooks/use-points.ts
@@ -3,13 +3,12 @@ import { useSelector } from 'react-redux';
 
 import { DetailedEvent, TimeStampedEvent } from '@models/ethereum-models';
 import Decimal from 'decimal.js';
-import { Event } from 'ethers';
+
+import { BURN_ADDRESS } from '@shared/constants/ethereum.constants';
 
 import { RootState } from '../store';
 import { useEthereum } from './use-ethereum';
 
-const BURN_ADDRESS = '0x0000000000000000000000000000000000000000';
-
 interface UsePointsReturnType {
   userPoints: number | undefined;
 }
@@ -78,8 +77,8 @@ export function calculatePoints(
 }
 
 export function usePoints(): UsePointsReturnType {
-  const { address: userAddress, network } = useSelector((state: RootState) => state.account);
-  const { getDefaultProvider } = useEthereum();
+  const { address: userAddress } = useSelector((state: RootState) => state.account);
+  const { fetchMintBurnEvents } = useEthereum();
 
   const [userPoints, setUserPoints] = useState<number | undefined>(undefined);
 
@@ -93,42 +92,13 @@ export function usePoints(): UsePointsReturnType {
     // eslint-disable-next-line react-hooks/exhaustive-deps
   }, [userAddress]);
 
-  function formatTransferEvent(event: any, timestamp: number): DetailedEvent {
-    return {
-      from: event.from.toLowerCase(),
-      to: event.to.toLowerCase(),
-      value: event.value,
-      timestamp,
-    };
-  }
-
-  async function fetchTransferEvents(userAddress: string): Promise<DetailedEvent[]> {
-    const dlcBTCContract = await getDefaultProvider(network, 'DLCBTC');
-    const eventFilterTo = dlcBTCContract.filters.Transfer(BURN_ADDRESS, userAddress);
-    const eventFilterFrom = dlcBTCContract.filters.Transfer(userAddress, BURN_ADDRESS);
-    const eventsTo = await dlcBTCContract.queryFilter(eventFilterTo);
-    const eventsFrom = await dlcBTCContract.queryFilter(eventFilterFrom);
-    const events = [...eventsTo, ...eventsFrom];
-    const detailedEvents: DetailedEvent[] = [];
-
-    await Promise.all(
-      events.map(async (event: Event) => {
-        const block = await dlcBTCContract.provider.getBlock(event.blockNumber);
-        detailedEvents.push(formatTransferEvent(event.args, block.timestamp));
-      })
-    );
-
-    detailedEvents.sort((a, b) => a.timestamp - b.timestamp);
-
-    return detailedEvents;
-  }
-
   async function fetchPoints(currentUserAddress: string): Promise<void> {
     const rewardsRate = import.meta.env.VITE_REWARDS_RATE;
     if (!rewardsRate) {
       throw new Error('Rewards Rate not set');
     }
-    const events = await fetchTransferEvents(currentUserAddress);
+    const events = await fetchMintBurnEvents(currentUserAddress);
+    events.sort((a, b) => a.timestamp - b.timestamp);
     const rollingTVL = calculateRollingTVL(events);
     setUserPoints(calculatePoints(rollingTVL, rewardsRate));
   }
diff --git a/src/app/hooks/use-proof-of-reserve.ts b/src/app/hooks/use-proof-of-reserve.ts
index 3f5862a..9c50db0 100644
--- a/src/app/hooks/use-proof-of-reserve.ts
+++ b/src/app/hooks/use-proof-of-reserve.ts
@@ -91,9 +91,8 @@ export function useProofOfReserve(): UseProofOfReserveReturnType {
     ethereumAddress: string
   ): Promise<number> {
     if (!proofOfReserveHandler) return 0;
-
     const filteredVaults = fundedVaults.filter(
-      vault => vault.creator.toLowerCase() === ethereumAddress
+      vault => vault.creator.toLowerCase() === ethereumAddress.toLowerCase()
     );
 
     const proofOfReserve = await proofOfReserveHandler.calculateProofOfReserve(filteredVaults);
diff --git a/src/app/pages/attestor-details/attestor-details-select-page.tsx b/src/app/pages/attestor-details/attestor-details-select-page.tsx
new file mode 100644
index 0000000..a265d39
--- /dev/null
+++ b/src/app/pages/attestor-details/attestor-details-select-page.tsx
@@ -0,0 +1,10 @@
+import { AttestorDetailsSelect } from '@components/attestor-details/attestor-details-select';
+import { PageLayout } from '@pages/components/page.layout';
+
+export function AttestorDetailsSelectPage(): React.JSX.Element {
+  return (
+    <PageLayout>
+      <AttestorDetailsSelect />
+    </PageLayout>
+  );
+}
diff --git a/src/app/providers/ethereum-context-provider.tsx b/src/app/providers/ethereum-context-provider.tsx
index f2c173b..ea06f8d 100644
--- a/src/app/providers/ethereum-context-provider.tsx
+++ b/src/app/providers/ethereum-context-provider.tsx
@@ -6,9 +6,8 @@ import { HasChildren } from '@models/has-children';
 import { ethers } from 'ethers';
 
 export interface EthereumContextProviderType {
-  protocolContract: any;
-  observerProtocolContract: any;
   dlcManagerContract: any;
+  observerDLCManagerContract: any;
   dlcBTCContract: any;
   getEthereumContracts: (
     ethereumSigner: ethers.providers.JsonRpcSigner,
@@ -18,9 +17,8 @@ export interface EthereumContextProviderType {
 }
 
 export const EthereumContext = createContext<any>({
-  protocolContract: undefined,
-  observerProtocolContract: undefined,
   dlcManagerContract: undefined,
+  observerDLCManagerContract: undefined,
   dlcBTCContract: undefined,
   getEthereumContracts: async (
     // eslint-disable-next-line @typescript-eslint/no-unused-vars
@@ -33,8 +31,7 @@ export const EthereumContext = createContext<any>({
 
 export function EthereumContextProvider({ children }: HasChildren): React.JSX.Element {
   const {
-    protocolContract,
-    observerProtocolContract,
+    observerDLCManagerContract,
     dlcManagerContract,
     dlcBTCContract,
     getEthereumContracts,
@@ -44,8 +41,7 @@ export function EthereumContextProvider({ children }: HasChildren): React.JSX.El
   return (
     <EthereumContext.Provider
       value={{
-        protocolContract,
-        observerProtocolContract,
+        observerDLCManagerContract,
         dlcManagerContract,
         dlcBTCContract,
         getEthereumContracts,
diff --git a/src/shared/constants/ethereum.constants.ts b/src/shared/constants/ethereum.constants.ts
new file mode 100644
index 0000000..9d2e274
--- /dev/null
+++ b/src/shared/constants/ethereum.constants.ts
@@ -0,0 +1 @@
+export const BURN_ADDRESS = '0x0000000000000000000000000000000000000000';
diff --git a/src/shared/examples/example-attestor-select-table-items.ts b/src/shared/examples/example-attestor-select-table-items.ts
new file mode 100644
index 0000000..baac68e
--- /dev/null
+++ b/src/shared/examples/example-attestor-select-table-items.ts
@@ -0,0 +1,66 @@
+export const exampleAttestorSelectTableItems = [
+  {
+    hash: 'DLC-Link Attestor 1',
+    time: '8 hours ago',
+    action: 'Update Vote State',
+    programs: 'TS',
+    value: '0.8059 dlcBTC',
+    token: 'N/A',
+  },
+  {
+    hash: 'DLC-Link Attestor 1',
+    time: '1 hours ago',
+    action: 'Create Proposal',
+    programs: 'VP',
+    value: '0.8415 dlcBTC',
+    token: 'N/A',
+  },
+  {
+    hash: 'DLC-Link Attestor 1',
+    time: '11 hours ago',
+    action: 'Execute Transaction',
+    programs: 'DL',
+    value: '0.5634 dlcBTC',
+    token: 'N/A',
+  },
+  {
+    hash: 'DLC-Link Attestor 1',
+    time: '13 hours ago',
+    action: 'Create Proposal',
+    programs: 'DL2',
+    value: '0.6588 dlcBTC',
+    token: 'N/A',
+  },
+  {
+    hash: 'DLC-Link Attestor 1',
+    time: '3 hours ago',
+    action: 'Update Vote State',
+    programs: 'VP',
+    value: '0.4762 dlcBTC',
+    token: 'N/A',
+  },
+  {
+    hash: 'DLC-Link Attestor 1',
+    time: '18 hours ago',
+    action: 'Create Proposal',
+    programs: 'TS',
+    value: '0.1499 dlcBTC',
+    token: 'N/A',
+  },
+  {
+    hash: 'DLC-Link Attestor 1',
+    time: '7 hours ago',
+    action: 'Update Vote State',
+    programs: 'DL2',
+    value: '0.5255 dlcBTC',
+    token: 'N/A',
+  },
+  {
+    hash: 'DLC-Link Attestor 1',
+    time: '6 hours ago',
+    action: 'Create Proposal',
+    programs: 'TS',
+    value: '0.9675 dlcBTC',
+    token: 'N/A',
+  },
+];
diff --git a/src/shared/examples/example-protocol-history-table-items.ts b/src/shared/examples/example-protocol-history-table-items.ts
deleted file mode 100644
index 2c9522f..0000000
--- a/src/shared/examples/example-protocol-history-table-items.ts
+++ /dev/null
@@ -1,72 +0,0 @@
-export const exampleProtocolHistoryItems = [
-  {
-    dlcBTCAmount: 0.1,
-    merchant: 'Merchant 1',
-    btcReserve: 'f0a2babdfafcfd82d076dca24fd9905a770dbffa52700c0a2c28856ff0a1634c',
-    date: '1 hour ago',
-    id: 1,
-  },
-  {
-    dlcBTCAmount: 0.2,
-    merchant: 'Merchant 2',
-    btcReserve: 'f0a2babdfafcfd82d076dca24fd9905a770dbffa52700c0a2c28856ff0a1634c',
-    date: '2 hours ago',
-    id: 2,
-  },
-  {
-    dlcBTCAmount: 0.3,
-    merchant: 'Merchant 3',
-    btcReserve: 'f0a2babdfafcfd82d076dca24fd9905a770dbffa52700c0a2c28856ff0a1634c',
-    date: '3 hours ago',
-    id: 3,
-  },
-  {
-    dlcBTCAmount: 0.4,
-    merchant: 'Merchant 4',
-    btcReserve: 'f0a2babdfafcfd82d076dca24fd9905a770dbffa52700c0a2c28856ff0a1634c',
-    date: '4 hours ago',
-    id: 4,
-  },
-  {
-    dlcBTCAmount: 0.5,
-    merchant: 'Merchant 5',
-    btcReserve: 'f0a2babdfafcfd82d076dca24fd9905a770dbffa52700c0a2c28856ff0a1634c',
-    date: '5 hours ago',
-    id: 5,
-  },
-  {
-    dlcBTCAmount: 0.6,
-    merchant: 'Merchant 6',
-    btcReserve: 'f0a2babdfafcfd82d076dca24fd9905a770dbffa52700c0a2c28856ff0a1634c',
-    date: '6 hours ago',
-    id: 6,
-  },
-  {
-    dlcBTCAmount: 0.7,
-    merchant: 'Merchant 7',
-    btcReserve: 'f0a2babdfafcfd82d076dca24fd9905a770dbffa52700c0a2c28856ff0a1634c',
-    date: '7 hours ago',
-    id: 7,
-  },
-  {
-    dlcBTCAmount: 0.8,
-    merchant: 'Merchant 8',
-    btcReserve: 'f0a2babdfafcfd82d076dca24fd9905a770dbffa52700c0a2c28856ff0a1634c',
-    date: '8 hours ago',
-    id: 8,
-  },
-  {
-    dlcBTCAmount: 0.9,
-    merchant: 'Merchant 9',
-    btcReserve: 'f0a2babdfafcfd82d076dca24fd9905a770dbffa52700c0a2c28856ff0a1634c',
-    date: '9 hours ago',
-    id: 9,
-  },
-  {
-    dlcBTCAmount: 1.0,
-    merchant: 'Merchant 10',
-    btcReserve: 'f0a2babdfafcfd82d076dca24fd9905a770dbffa52700c0a2c28856ff0a1634c',
-    date: '10 hours ago',
-    id: 10,
-  },
-];
diff --git a/src/shared/models/ethereum-models.ts b/src/shared/models/ethereum-models.ts
index d74df86..72965e2 100644
--- a/src/shared/models/ethereum-models.ts
+++ b/src/shared/models/ethereum-models.ts
@@ -10,4 +10,5 @@ export interface DetailedEvent {
   to: string;
   value: BigNumber;
   timestamp: number;
+  txHash: string;
 }
diff --git a/src/shared/utilities.ts b/src/shared/utilities.ts
new file mode 100644
index 0000000..edd1dab
--- /dev/null
+++ b/src/shared/utilities.ts
@@ -0,0 +1,6 @@
+export const formatName = (name: string): string => {
+  return name
+    .split(' ')
+    .map((word: string) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
+    .join(' ');
+};
diff --git a/src/styles/app-theme.ts b/src/styles/app-theme.ts
index 02d71c7..14fec6b 100644
--- a/src/styles/app-theme.ts
+++ b/src/styles/app-theme.ts
@@ -54,6 +54,10 @@ export const appTheme = extendTheme({
     'white.03': 'rgba(255,255,255,0.35)',
     'warning.01': 'rgba(255,204,85, 1)',
     'error.01': 'rgba(255,51,102, 1)',
+    'table.background.green': 'rgba(50, 201, 247, 0.1)',
+    'table.background.red': 'rgba(172, 80, 239, 0.2)',
+    'green.mint': 'rgba(50, 201, 247, 1)',
+    'red.redeem': 'rgba(233, 97, 255, 1)',
   },
   fonts: {
     body: "'Onest', onest, sans-serif",
diff --git a/tests/unit/points.unit.test.ts b/tests/unit/points.unit.test.ts
index d3e8880..8a9ca34 100644
--- a/tests/unit/points.unit.test.ts
+++ b/tests/unit/points.unit.test.ts
@@ -8,14 +8,39 @@ import { BigNumber } from 'ethers';
 import { describe, expect, it } from 'vitest';
 
 const BURN_ADDRESS = '0x0000000000000000000000000000000000000000';
+const txHash = '0x456';
 
 describe('calculateRollingTVL', () => {
   it('should correctly calculate total value locked over time', () => {
     const events: DetailedEvent[] = [
-      { from: BURN_ADDRESS, to: '0x123', value: BigNumber.from(50000000), timestamp: 1000 },
-      { from: '0x123', to: BURN_ADDRESS, value: BigNumber.from(1000000), timestamp: 2000 },
-      { from: '0x123', to: BURN_ADDRESS, value: BigNumber.from(200000), timestamp: 3000 },
-      { from: BURN_ADDRESS, to: '0x123', value: BigNumber.from(1000000), timestamp: 4000 },
+      {
+        from: BURN_ADDRESS,
+        to: '0x123',
+        value: BigNumber.from(50000000),
+        timestamp: 1000,
+        txHash: txHash,
+      },
+      {
+        from: '0x123',
+        to: BURN_ADDRESS,
+        value: BigNumber.from(1000000),
+        timestamp: 2000,
+        txHash: txHash,
+      },
+      {
+        from: '0x123',
+        to: BURN_ADDRESS,
+        value: BigNumber.from(200000),
+        timestamp: 3000,
+        txHash: txHash,
+      },
+      {
+        from: BURN_ADDRESS,
+        to: '0x123',
+        value: BigNumber.from(1000000),
+        timestamp: 4000,
+        txHash: txHash,
+      },
     ];
 
     const result = calculateRollingTVL(events);
@@ -30,7 +55,7 @@ describe('calculateRollingTVL', () => {
 
   it('should throw an error if neither FROM nor TO address is BURN_ADDRESS', () => {
     const events: DetailedEvent[] = [
-      { from: '0x123', to: '0x456', value: BigNumber.from(100), timestamp: 1000 },
+      { from: '0x123', to: '0x456', value: BigNumber.from(100), timestamp: 1000, txHash: txHash },
     ];
 
     expect(() => calculateRollingTVL(events)).toThrow('Invalid event in calculateRollingTVL');
diff --git a/tsconfig.json b/tsconfig.json
index f829951..8664caa 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -34,5 +34,5 @@
     "noFallthroughCasesInSwitch": true
   },
   "include": ["src", "tests"],
-  "references": [{ "path": "./tsconfig.node.json" }]
+  "references": [{ "path": "./tsconfig.node.json" }],
 }
diff --git a/yarn.lock b/yarn.lock
index 0953ce6..d12833d 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -5616,6 +5616,11 @@ react-focus-lock@^2.9.4:
     use-callback-ref "^1.3.0"
     use-sidecar "^1.1.2"
 
+react-icons@^5.2.1:
+  version "5.2.1"
+  resolved "https://registry.yarnpkg.com/react-icons/-/react-icons-5.2.1.tgz#28c2040917b2a2eda639b0f797bff1888e018e4a"
+  integrity sha512-zdbW5GstTzXaVKvGSyTaBalt7HSfuK5ovrzlpyiWHAFXndXTdd/1hdDHI4xBM1Mn7YriT6aqESucFl9kEXzrdw==
+
 react-is@^16.13.1, react-is@^16.7.0:
   version "16.13.1"
   resolved "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz"
